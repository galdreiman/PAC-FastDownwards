#! /usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import os

# make sure we're in the run directory
os.chdir(os.path.dirname(os.path.abspath(__file__)))

from lab.calls.call import Call
from lab.calls.log import driver_log, driver_err

sys.stdout = driver_log
sys.stderr = driver_err

from lab.calls.log import print_, redirects, save_returncode
from lab.calls.log import set_property

set_property('queue', os.environ.get('QUEUE'))


DOMAIN = "/home/shahar/lab/preprocessed-tasks/WORK-WORK/freecell/probfreecell-3-3.pddl/domain.pddl"
DOWNWARD_VALIDATE = "../../downward-validate"
OUTPUT = "/home/shahar/lab/preprocessed-tasks/WORK-WORK/freecell/probfreecell-3-3.pddl/output"
PROBLEM = "/home/shahar/lab/preprocessed-tasks/WORK-WORK/freecell/probfreecell-3-3.pddl/problem.pddl"
SEARCH_PARSER0 = "../../search_parser.py"
SEARCH_WORK = "../../code-WORK/search/downward"
VALIDATE = "../../validate"


retcode = Call([SEARCH_WORK, "--search", "astar(lmcut())"], time_limit=300, mem_limit=2048, stdin=OUTPUT, name="search", **redirects).wait()
save_returncode("search", retcode)

retcode = Call(["bash", "-c", "rm -f downward.tmp.*"], name="rm-tmp-files", **redirects).wait()
save_returncode("rm-tmp-files", retcode)

retcode = Call([DOWNWARD_VALIDATE, VALIDATE, DOMAIN, PROBLEM], name="validate", **redirects).wait()
save_returncode("validate", retcode)

retcode = Call([SEARCH_PARSER0], name="run-search_parser0", **redirects).wait()
save_returncode("run-search_parser0", retcode)


for stream in redirects.values():
    stream.close()
