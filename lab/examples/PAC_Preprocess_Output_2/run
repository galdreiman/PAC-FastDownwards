#! /usr/bin/env python

import sys
import os
import multiprocessing
import subprocess

# make sure we're in the run directory
os.chdir(os.path.dirname(os.path.abspath(__file__)))


dirs = [
'runs-00001-00100/00001',
'runs-00001-00100/00002',
'runs-00001-00100/00003',
'runs-00001-00100/00004',
'runs-00001-00100/00005',
'runs-00001-00100/00006',
'runs-00001-00100/00007',
'runs-00001-00100/00008',
'runs-00001-00100/00009',
'runs-00001-00100/00010',
'runs-00001-00100/00011',
'runs-00001-00100/00012',
'runs-00001-00100/00013',
'runs-00001-00100/00014',
'runs-00001-00100/00015',
'runs-00001-00100/00016',
'runs-00001-00100/00017',
'runs-00001-00100/00018',
'runs-00001-00100/00019',
'runs-00001-00100/00020',
'runs-00001-00100/00021',
'runs-00001-00100/00022',
'runs-00001-00100/00023',
'runs-00001-00100/00024',
'runs-00001-00100/00025',
'runs-00001-00100/00026',
'runs-00001-00100/00027',
'runs-00001-00100/00028',
'runs-00001-00100/00029',
'runs-00001-00100/00030',
'runs-00001-00100/00031',
'runs-00001-00100/00032',
'runs-00001-00100/00033',
'runs-00001-00100/00034',
'runs-00001-00100/00035',
'runs-00001-00100/00036',
'runs-00001-00100/00037',
'runs-00001-00100/00038',
'runs-00001-00100/00039',
'runs-00001-00100/00040',
'runs-00001-00100/00041',
'runs-00001-00100/00042',
'runs-00001-00100/00043',
'runs-00001-00100/00044',
'runs-00001-00100/00045',
'runs-00001-00100/00046',
'runs-00001-00100/00047',
'runs-00001-00100/00048',
'runs-00001-00100/00049',
'runs-00001-00100/00050',
'runs-00001-00100/00051',
'runs-00001-00100/00052',
'runs-00001-00100/00053',
'runs-00001-00100/00054',
'runs-00001-00100/00055',
'runs-00001-00100/00056',
'runs-00001-00100/00057',
'runs-00001-00100/00058',
'runs-00001-00100/00059',
'runs-00001-00100/00060',
'runs-00001-00100/00061',
'runs-00001-00100/00062',
'runs-00001-00100/00063',
'runs-00001-00100/00064',
'runs-00001-00100/00065',
'runs-00001-00100/00066'
]


def process_dir(dir):
    number = dir.split('/')[-1]
    print 'Starting run %s/%s' % (number, str(len(dirs)).zfill(5))
    run = subprocess.Popen(['./run'], cwd=dir, stdout=sys.stdout, stderr=sys.stderr)
    try:
        run.wait()
    except KeyboardInterrupt:
        print 'Call to run %s interrupted' % number
        run.terminate()
    except OSError, err:
        print err


def main():
    pool = multiprocessing.Pool(processes=4)
    try:
        pool.map(process_dir, dirs, chunksize=1)
    except KeyboardInterrupt:
        print 'Main script interrupted'
        pool.terminate()
    finally:
        pool.close()
        print 'Joining pool processes'
        pool.join()


if __name__ == '__main__':
    main()
