#! /usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import os

# make sure we're in the run directory
os.chdir(os.path.dirname(os.path.abspath(__file__)))

from lab.calls.call import Call
from lab.calls.log import driver_log, driver_err

sys.stdout = driver_log
sys.stderr = driver_err

from lab.calls.log import print_, redirects, save_returncode
from lab.calls.log import set_property

set_property('queue', os.environ.get('QUEUE'))


DOMAIN = "/home/sternron/gal-dreiman/downward/benchmarks/tpp/domain.pddl"
PREPROCESS_PARSER = "/home/sternron/gal-dreiman/downward/lab/downward/scripts/preprocess_parser.py"
PREPROCESS_WORK = "/home/sternron/gal-dreiman/downward/src/preprocess/preprocess"
PROBLEM = "/home/sternron/gal-dreiman/downward/benchmarks/tpp/p15.pddl"
TRANSLATE_WORK = "/home/sternron/gal-dreiman/downward/src/translate/translate.py"


retcode = Call(["python", "-c", "import platform; print 'Python version: %s' % platform.python_version()"], name="print-python-version", **redirects).wait()
save_returncode("print-python-version", retcode)

retcode = Call(["python", TRANSLATE_WORK, DOMAIN, PROBLEM], time_limit=7200, mem_limit=8192, name="translate", **redirects).wait()
save_returncode("translate", retcode)

retcode = Call([PREPROCESS_WORK], time_limit=7200, mem_limit=8192, stdin='output.sas', name="preprocess", **redirects).wait()
save_returncode("preprocess", retcode)

retcode = Call([PREPROCESS_PARSER], name="parse-preprocess", **redirects).wait()
save_returncode("parse-preprocess", retcode)

retcode = Call(["xz", "output.sas"], name="compress-output-sas", **redirects).wait()
save_returncode("compress-output-sas", retcode)


for stream in redirects.values():
    stream.close()
